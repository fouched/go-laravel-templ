package views

import (
    "github.com/fouched/rapidus"
    "myapp/data"
    "myapp/views/layouts"
)

templ Form(user data.User, validator *rapidus.Validation) {
    @layouts.Base("Form") {

        <h2 class="mt-5 text-center">Form Validation</h2>

        <hr>

        <!-- note disable browser validation -->
        <form method="post" action="/form"
              class="d-block needs-validation"
              autocomplete="off" novalidate>

            <input type="hidden" name="csrf_token" value="{{.CSRFToken}}">

            <div class="mb-3">
                <label for="first_name" class="form-label">First Name</label>
                <input type="text" id="first_name" name="first_name"
                    required="" autocomplete="first_name-new"
                    value={user.FirstName}
                    class={"form-control", templ.KV("is-invalid", validator.Errors["first_name"] != "")}
                >
                <div class="invalid-feedback">
                    {validator.Errors["first_name"]}
                </div>
            </div>

            <div class="mb-3">
                <label for="last_name" class="form-label">Last Name</label>
                <input type="text" id="last_name" name="last_name"
                    required="" autocomplete="last_name-new"
                    value={user.LastName}
                    class={"form-control", templ.KV("is-invalid", validator.Errors["last_name"] != "")}
                >
                <div class="invalid-feedback">
                    {validator.Errors["last_name"]}
                </div>
            </div>

            <div class="mb-3">
                <label for="email" class="form-label">Email</label>
                <input type="email" id="email" name="email"
                    required="" autocomplete="email-new"
                    value={user.Email}
                    class={"form-control", templ.KV("is-invalid", validator.Errors["email"] != "")}
                >
                <div class="invalid-feedback">
                    {validator.Errors["email"]}
                </div>
            </div>

            <hr>
            <input type="submit" class="btn btn-primary" value="Submit">

        </form>
        <br>
        <div class="text-center">
            <a class="btn btn-outline-secondary" href="/">Back</a>
        </div>


        <p>&nbsp;</p>

        <script>
        // note did not enable bootstrap validation
        </script>
    }
}
